"""
Django settings for demoproj project.

Generated by 'django-admin startproject' using Django 3.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from typing import List

from celery.schedules import crontab

from django_guid.integrations import SentryIntegration  # noqa
from django_guid.integrations.celery import CeleryIntegration

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = 'secret'

DEBUG = True

ALLOWED_HOSTS: List[str] = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_guid',
]

MIDDLEWARE = [
    'django_guid.middleware.guid_middleware',  # <-- Add middleware at the top of your middlewares
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'demoproj.urls'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'NAME': ':memory:',
    }
}

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# fmt: off

# Non required DJANGO_GUID settings (Set to default values here)
DJANGO_GUID = {
    'GUID_HEADER_NAME': 'Correlation-ID',
    'VALIDATE_GUID': True,
    'INTEGRATIONS': [],
    'IGNORE_URLS': ['no-guid'],
}

# Set up logging for the project
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'correlation_id': {
            '()': 'django_guid.log_filters.CorrelationId',  # <-- Adds correlation ID
        },
        'celery_parent': {
            '()' : 'django_guid.integrations.celery.log_filters.CeleryParentId'  # <-- Adds depth to celery logs
        }
    },
    'formatters': {
        'basic': {
            'format': '%(levelname)s %(asctime)s %(name)s -- %(message)s'
        },
        # An example of a format including the correlation ID in the output
        # Example log:
        # INFO 2020-11-15 11:42:41,543 [9afef4a3eb8e4df2b0eac380dcc9d0e9] demoproj.views.sync_views - This log ...
        'cid': {  # <-- Decide how log output in the console will be displayed
            'format': '%(levelname)s %(asctime)s [%(correlation_id)s] %(name)s - %(message)s'
        },
        # An example of a format including the correlation ID and a Celery referral ID
        # Example log:
        # [cc9889f83f66433fa021f253a9d3537b] [928f9 -> 91328] django_guid.celery - Clearing GUID for celery worker
        'cid_with_depth': {
            'format': '%(levelname)s [%(correlation_id)s] [%(celery_parent_id)s-%(celery_current_id)s] %(name)s - %(message)s'
        },
    },
    'handlers': {
        'basic': {
            'class': 'logging.StreamHandler',
            'formatter': 'basic',
        },
        # Correlation ID is included in log.extra and shown in the console output
        'correlation_id': {
            'class': 'logging.StreamHandler',
            'formatter': 'cid',
            'filters': ['correlation_id'],  # <-- adds filters to the handler
        },
        # Correlation ID and Celery origin is included in log.extra and shown in the console output
        'correlation_id_with_depth': {
            'class': 'logging.StreamHandler',
            'formatter': 'cid_with_depth',
            'filters': ['correlation_id', 'celery_parent'],
        },
        # Only Correlation ID is shown in the console output, but both are added to log.extra
        'correlation_id_with_depth_but_not_shown_in_formatter': {
            'class': 'logging.StreamHandler',
            'formatter': 'cid',
            'filters': ['correlation_id', 'celery_parent'],
        },
    },
    'loggers': {
        'django': {
            'handlers': ['correlation_id'],
            'level': 'INFO'
        },
        'demoproj': {
            'handlers': ['correlation_id'],
            'level': 'DEBUG'
        },
        'django_guid': {
            'handlers': ['correlation_id'],
            'level': 'DEBUG',  # Set to DEBUG to show log messages from DJANGO_GUID
            'propagate': True,
        },
        'django_guid.celery': {
            'handlers': ['correlation_id_with_depth'],
            'level': 'INFO',
            'propagate': False,
        },
        'celery': {
            'handlers': ['correlation_id_with_depth'],
            'level': 'INFO',
        },
    }
}

# fmt: on

CELERY_BROKER_URL = 'redis://:@localhost:6378'
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
CELERY_BEAT_SCHEDULE = {
    'test': {
        'task': 'demoproj.celery.debug_task',
        'schedule': crontab(minute='*/1'),
    },
}
